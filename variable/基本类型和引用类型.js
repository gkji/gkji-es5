
/*
1. 对于任意一个变量都有三种信息
    值: 右值
    地址: 左值
    类型
以上内容不做具体解释, 不理解的来问
*/

/*
2. 在使用变量的过程中, 有时使用的是 值, 有时使用的是地址, 打比方来说, 地址就是房间的门牌号, 值就是房间里的货物
在赋值操作中, 赋值符号左侧必须是地址, 右侧可以是值/地址, 所以通常将变量的地址称为左值, 变量的值称为右值
赋值操作的结果是修改变量的值
*/

// demo1
var name = "qinghe" // name 是地址
var name2 = name //  name 是值

/* 
3. javascript 基本类型和引用类型
基本类型的左值是地址, 右值是变量值本身, 见 demo1
引用类型的左值是地址, 右值是变量值在堆内存中的地址, 见 demo2
*/

// dmeo2
let obj = {}
let obj2 = obj // obj 作为左值

obj2.name = 'javascript'

log(obj.name) // 'javascript'
// 说明 obj2 和 obj 指向同一个对象


/*
基本类型和引用类型的区别就是 引用类型的右值是地址, 右值是地址的, 也就是指针, 即引用类型就是指针

然后就可以引用 C 的栈和堆的概念来解释基本类型和引用类型了

不然说不通因为 js 里没有栈和堆的概

普通变量定义在栈内存中, 内存地址保存变量的值
动态分配内存的变量也声明在栈上, 内存地址中保存的另一个内存地址, 该内存地址是一个堆内存地址

引用类型是 ptr , 而非 *ptr
*/

// obj 是指针的话, obj.name 是什么 obj. 是 obj 的堆地址中保存的值